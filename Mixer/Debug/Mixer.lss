
Mixer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000055e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000050a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000055e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000590  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000005d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000096f  00000000  00000000  00000620  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000813  00000000  00000000  00000f8f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003b2  00000000  00000000  000017a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000078  00000000  00000000  00001b54  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003fd  00000000  00000000  00001bcc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000013e  00000000  00000000  00001fc9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00002107  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 75 00 	call	0xea	; 0xea <main>
  78:	0c 94 83 02 	jmp	0x506	; 0x506 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <USART_init>:
void USART_init()
{
	unsigned int UBRR_val = (((F_CPU/(16*BAUD)))-1);
	
	//Configure baud rate
	UBRR0L = UBRR_val;
  80:	87 e6       	ldi	r24, 0x67	; 103
  82:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UBRR0H = UBRR_val >> 8;
  86:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	
	UCSR0C = (1 << UCSZ00) | (1 << UCSZ01);
  8a:	86 e0       	ldi	r24, 0x06	; 6
  8c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	
	//Set transmit bit
	UCSR0B |= (1 << TXEN0);
  90:	e1 ec       	ldi	r30, 0xC1	; 193
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	80 81       	ld	r24, Z
  96:	88 60       	ori	r24, 0x08	; 8
  98:	80 83       	st	Z, r24
  9a:	08 95       	ret

0000009c <USART_TX>:
	
}


void USART_TX(char * volumo)
{
  9c:	ac 01       	movw	r20, r24
	unsigned char i = 0;
  9e:	20 e0       	ldi	r18, 0x00	; 0
	
	while(volumo[i] != '\0')
  a0:	07 c0       	rjmp	.+14     	; 0xb0 <USART_TX+0x14>
	{
		while((UCSR0A & (1<<UDRE0))==0);
  a2:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  a6:	95 ff       	sbrs	r25, 5
  a8:	fc cf       	rjmp	.-8      	; 0xa2 <USART_TX+0x6>
		UDR0 = volumo[i];
  aa:	30 93 c6 00 	sts	0x00C6, r19	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
		
		i++;
  ae:	2f 5f       	subi	r18, 0xFF	; 255

void USART_TX(char * volumo)
{
	unsigned char i = 0;
	
	while(volumo[i] != '\0')
  b0:	fa 01       	movw	r30, r20
  b2:	e2 0f       	add	r30, r18
  b4:	f1 1d       	adc	r31, r1
  b6:	30 81       	ld	r19, Z
  b8:	31 11       	cpse	r19, r1
  ba:	f3 cf       	rjmp	.-26     	; 0xa2 <USART_TX+0x6>
	}
	//UDR0 = '\n';
	//mixerinfo = ADC;
	
	
}
  bc:	08 95       	ret

000000be <converto>:

int converto(int val)
{
	return ((val*100.0)/1023);
  be:	bc 01       	movw	r22, r24
  c0:	99 0f       	add	r25, r25
  c2:	88 0b       	sbc	r24, r24
  c4:	99 0b       	sbc	r25, r25
  c6:	0e 94 55 01 	call	0x2aa	; 0x2aa <__floatsisf>
  ca:	20 e0       	ldi	r18, 0x00	; 0
  cc:	30 e0       	ldi	r19, 0x00	; 0
  ce:	48 ec       	ldi	r20, 0xC8	; 200
  d0:	52 e4       	ldi	r21, 0x42	; 66
  d2:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <__mulsf3>
  d6:	20 e0       	ldi	r18, 0x00	; 0
  d8:	30 ec       	ldi	r19, 0xC0	; 192
  da:	4f e7       	ldi	r20, 0x7F	; 127
  dc:	54 e4       	ldi	r21, 0x44	; 68
  de:	0e 94 ab 00 	call	0x156	; 0x156 <__divsf3>
  e2:	0e 94 1d 01 	call	0x23a	; 0x23a <__fixsfsi>
}
  e6:	cb 01       	movw	r24, r22
  e8:	08 95       	ret

000000ea <main>:




int main(void)
{	
  ea:	cf 93       	push	r28
  ec:	df 93       	push	r29
  ee:	00 d0       	rcall	.+0      	; 0xf0 <main+0x6>
  f0:	00 d0       	rcall	.+0      	; 0xf2 <main+0x8>
  f2:	1f 92       	push	r1
  f4:	cd b7       	in	r28, 0x3d	; 61
  f6:	de b7       	in	r29, 0x3e	; 62
	int mixerinfo;
	char adc_value[5];
	ADMUX = 0x00;
  f8:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	USART_init();
  fc:	0e 94 40 00 	call	0x80	; 0x80 <USART_init>
	//channel 1/ADC0 for now
	//Enable ADC and set to Free running mode
	//free running mode broken
	//ADCSRA = (1 << ADEN) | (1 <<ADATE)  | (1 << ADSC)
	
	ADCSRA = (1 << ADEN);
 100:	80 e8       	ldi	r24, 0x80	; 128
 102:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>

    while(1) 
    {
		ADCSRA |= (1 << ADSC);
 106:	ea e7       	ldi	r30, 0x7A	; 122
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	80 64       	ori	r24, 0x40	; 64
 10e:	80 83       	st	Z, r24
		while((ADCSRA & 1 << ADIF) == 0);
 110:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 114:	84 ff       	sbrs	r24, 4
 116:	fc cf       	rjmp	.-8      	; 0x110 <main+0x26>
		ADCSRA |= (1<<ADIF);
 118:	ea e7       	ldi	r30, 0x7A	; 122
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	80 81       	ld	r24, Z
 11e:	80 61       	ori	r24, 0x10	; 16
 120:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 122:	2f ef       	ldi	r18, 0xFF	; 255
 124:	89 e6       	ldi	r24, 0x69	; 105
 126:	98 e1       	ldi	r25, 0x18	; 24
 128:	21 50       	subi	r18, 0x01	; 1
 12a:	80 40       	sbci	r24, 0x00	; 0
 12c:	90 40       	sbci	r25, 0x00	; 0
 12e:	e1 f7       	brne	.-8      	; 0x128 <main+0x3e>
 130:	00 c0       	rjmp	.+0      	; 0x132 <main+0x48>
 132:	00 00       	nop
		
		_delay_ms(500);


		mixerinfo = converto(ADC);
 134:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 138:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 13c:	0e 94 5f 00 	call	0xbe	; 0xbe <converto>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 140:	4a e0       	ldi	r20, 0x0A	; 10
 142:	be 01       	movw	r22, r28
 144:	6f 5f       	subi	r22, 0xFF	; 255
 146:	7f 4f       	sbci	r23, 0xFF	; 255
 148:	0e 94 4e 02 	call	0x49c	; 0x49c <__itoa_ncheck>
		itoa(mixerinfo, adc_value, 10);
		USART_TX(adc_value);
 14c:	ce 01       	movw	r24, r28
 14e:	01 96       	adiw	r24, 0x01	; 1
 150:	0e 94 4e 00 	call	0x9c	; 0x9c <USART_TX>
			

    }
 154:	d8 cf       	rjmp	.-80     	; 0x106 <main+0x1c>

00000156 <__divsf3>:
 156:	0e 94 bf 00 	call	0x17e	; 0x17e <__divsf3x>
 15a:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__fp_round>
 15e:	0e 94 a0 01 	call	0x340	; 0x340 <__fp_pscB>
 162:	58 f0       	brcs	.+22     	; 0x17a <__divsf3+0x24>
 164:	0e 94 99 01 	call	0x332	; 0x332 <__fp_pscA>
 168:	40 f0       	brcs	.+16     	; 0x17a <__divsf3+0x24>
 16a:	29 f4       	brne	.+10     	; 0x176 <__divsf3+0x20>
 16c:	5f 3f       	cpi	r21, 0xFF	; 255
 16e:	29 f0       	breq	.+10     	; 0x17a <__divsf3+0x24>
 170:	0c 94 90 01 	jmp	0x320	; 0x320 <__fp_inf>
 174:	51 11       	cpse	r21, r1
 176:	0c 94 db 01 	jmp	0x3b6	; 0x3b6 <__fp_szero>
 17a:	0c 94 96 01 	jmp	0x32c	; 0x32c <__fp_nan>

0000017e <__divsf3x>:
 17e:	0e 94 b8 01 	call	0x370	; 0x370 <__fp_split3>
 182:	68 f3       	brcs	.-38     	; 0x15e <__divsf3+0x8>

00000184 <__divsf3_pse>:
 184:	99 23       	and	r25, r25
 186:	b1 f3       	breq	.-20     	; 0x174 <__divsf3+0x1e>
 188:	55 23       	and	r21, r21
 18a:	91 f3       	breq	.-28     	; 0x170 <__divsf3+0x1a>
 18c:	95 1b       	sub	r25, r21
 18e:	55 0b       	sbc	r21, r21
 190:	bb 27       	eor	r27, r27
 192:	aa 27       	eor	r26, r26
 194:	62 17       	cp	r22, r18
 196:	73 07       	cpc	r23, r19
 198:	84 07       	cpc	r24, r20
 19a:	38 f0       	brcs	.+14     	; 0x1aa <__divsf3_pse+0x26>
 19c:	9f 5f       	subi	r25, 0xFF	; 255
 19e:	5f 4f       	sbci	r21, 0xFF	; 255
 1a0:	22 0f       	add	r18, r18
 1a2:	33 1f       	adc	r19, r19
 1a4:	44 1f       	adc	r20, r20
 1a6:	aa 1f       	adc	r26, r26
 1a8:	a9 f3       	breq	.-22     	; 0x194 <__divsf3_pse+0x10>
 1aa:	35 d0       	rcall	.+106    	; 0x216 <__divsf3_pse+0x92>
 1ac:	0e 2e       	mov	r0, r30
 1ae:	3a f0       	brmi	.+14     	; 0x1be <__divsf3_pse+0x3a>
 1b0:	e0 e8       	ldi	r30, 0x80	; 128
 1b2:	32 d0       	rcall	.+100    	; 0x218 <__divsf3_pse+0x94>
 1b4:	91 50       	subi	r25, 0x01	; 1
 1b6:	50 40       	sbci	r21, 0x00	; 0
 1b8:	e6 95       	lsr	r30
 1ba:	00 1c       	adc	r0, r0
 1bc:	ca f7       	brpl	.-14     	; 0x1b0 <__divsf3_pse+0x2c>
 1be:	2b d0       	rcall	.+86     	; 0x216 <__divsf3_pse+0x92>
 1c0:	fe 2f       	mov	r31, r30
 1c2:	29 d0       	rcall	.+82     	; 0x216 <__divsf3_pse+0x92>
 1c4:	66 0f       	add	r22, r22
 1c6:	77 1f       	adc	r23, r23
 1c8:	88 1f       	adc	r24, r24
 1ca:	bb 1f       	adc	r27, r27
 1cc:	26 17       	cp	r18, r22
 1ce:	37 07       	cpc	r19, r23
 1d0:	48 07       	cpc	r20, r24
 1d2:	ab 07       	cpc	r26, r27
 1d4:	b0 e8       	ldi	r27, 0x80	; 128
 1d6:	09 f0       	breq	.+2      	; 0x1da <__divsf3_pse+0x56>
 1d8:	bb 0b       	sbc	r27, r27
 1da:	80 2d       	mov	r24, r0
 1dc:	bf 01       	movw	r22, r30
 1de:	ff 27       	eor	r31, r31
 1e0:	93 58       	subi	r25, 0x83	; 131
 1e2:	5f 4f       	sbci	r21, 0xFF	; 255
 1e4:	3a f0       	brmi	.+14     	; 0x1f4 <__divsf3_pse+0x70>
 1e6:	9e 3f       	cpi	r25, 0xFE	; 254
 1e8:	51 05       	cpc	r21, r1
 1ea:	78 f0       	brcs	.+30     	; 0x20a <__divsf3_pse+0x86>
 1ec:	0c 94 90 01 	jmp	0x320	; 0x320 <__fp_inf>
 1f0:	0c 94 db 01 	jmp	0x3b6	; 0x3b6 <__fp_szero>
 1f4:	5f 3f       	cpi	r21, 0xFF	; 255
 1f6:	e4 f3       	brlt	.-8      	; 0x1f0 <__divsf3_pse+0x6c>
 1f8:	98 3e       	cpi	r25, 0xE8	; 232
 1fa:	d4 f3       	brlt	.-12     	; 0x1f0 <__divsf3_pse+0x6c>
 1fc:	86 95       	lsr	r24
 1fe:	77 95       	ror	r23
 200:	67 95       	ror	r22
 202:	b7 95       	ror	r27
 204:	f7 95       	ror	r31
 206:	9f 5f       	subi	r25, 0xFF	; 255
 208:	c9 f7       	brne	.-14     	; 0x1fc <__divsf3_pse+0x78>
 20a:	88 0f       	add	r24, r24
 20c:	91 1d       	adc	r25, r1
 20e:	96 95       	lsr	r25
 210:	87 95       	ror	r24
 212:	97 f9       	bld	r25, 7
 214:	08 95       	ret
 216:	e1 e0       	ldi	r30, 0x01	; 1
 218:	66 0f       	add	r22, r22
 21a:	77 1f       	adc	r23, r23
 21c:	88 1f       	adc	r24, r24
 21e:	bb 1f       	adc	r27, r27
 220:	62 17       	cp	r22, r18
 222:	73 07       	cpc	r23, r19
 224:	84 07       	cpc	r24, r20
 226:	ba 07       	cpc	r27, r26
 228:	20 f0       	brcs	.+8      	; 0x232 <__divsf3_pse+0xae>
 22a:	62 1b       	sub	r22, r18
 22c:	73 0b       	sbc	r23, r19
 22e:	84 0b       	sbc	r24, r20
 230:	ba 0b       	sbc	r27, r26
 232:	ee 1f       	adc	r30, r30
 234:	88 f7       	brcc	.-30     	; 0x218 <__divsf3_pse+0x94>
 236:	e0 95       	com	r30
 238:	08 95       	ret

0000023a <__fixsfsi>:
 23a:	0e 94 24 01 	call	0x248	; 0x248 <__fixunssfsi>
 23e:	68 94       	set
 240:	b1 11       	cpse	r27, r1
 242:	0c 94 db 01 	jmp	0x3b6	; 0x3b6 <__fp_szero>
 246:	08 95       	ret

00000248 <__fixunssfsi>:
 248:	0e 94 c0 01 	call	0x380	; 0x380 <__fp_splitA>
 24c:	88 f0       	brcs	.+34     	; 0x270 <__fixunssfsi+0x28>
 24e:	9f 57       	subi	r25, 0x7F	; 127
 250:	98 f0       	brcs	.+38     	; 0x278 <__fixunssfsi+0x30>
 252:	b9 2f       	mov	r27, r25
 254:	99 27       	eor	r25, r25
 256:	b7 51       	subi	r27, 0x17	; 23
 258:	b0 f0       	brcs	.+44     	; 0x286 <__fixunssfsi+0x3e>
 25a:	e1 f0       	breq	.+56     	; 0x294 <__fixunssfsi+0x4c>
 25c:	66 0f       	add	r22, r22
 25e:	77 1f       	adc	r23, r23
 260:	88 1f       	adc	r24, r24
 262:	99 1f       	adc	r25, r25
 264:	1a f0       	brmi	.+6      	; 0x26c <__fixunssfsi+0x24>
 266:	ba 95       	dec	r27
 268:	c9 f7       	brne	.-14     	; 0x25c <__fixunssfsi+0x14>
 26a:	14 c0       	rjmp	.+40     	; 0x294 <__fixunssfsi+0x4c>
 26c:	b1 30       	cpi	r27, 0x01	; 1
 26e:	91 f0       	breq	.+36     	; 0x294 <__fixunssfsi+0x4c>
 270:	0e 94 da 01 	call	0x3b4	; 0x3b4 <__fp_zero>
 274:	b1 e0       	ldi	r27, 0x01	; 1
 276:	08 95       	ret
 278:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__fp_zero>
 27c:	67 2f       	mov	r22, r23
 27e:	78 2f       	mov	r23, r24
 280:	88 27       	eor	r24, r24
 282:	b8 5f       	subi	r27, 0xF8	; 248
 284:	39 f0       	breq	.+14     	; 0x294 <__fixunssfsi+0x4c>
 286:	b9 3f       	cpi	r27, 0xF9	; 249
 288:	cc f3       	brlt	.-14     	; 0x27c <__fixunssfsi+0x34>
 28a:	86 95       	lsr	r24
 28c:	77 95       	ror	r23
 28e:	67 95       	ror	r22
 290:	b3 95       	inc	r27
 292:	d9 f7       	brne	.-10     	; 0x28a <__fixunssfsi+0x42>
 294:	3e f4       	brtc	.+14     	; 0x2a4 <__fixunssfsi+0x5c>
 296:	90 95       	com	r25
 298:	80 95       	com	r24
 29a:	70 95       	com	r23
 29c:	61 95       	neg	r22
 29e:	7f 4f       	sbci	r23, 0xFF	; 255
 2a0:	8f 4f       	sbci	r24, 0xFF	; 255
 2a2:	9f 4f       	sbci	r25, 0xFF	; 255
 2a4:	08 95       	ret

000002a6 <__floatunsisf>:
 2a6:	e8 94       	clt
 2a8:	09 c0       	rjmp	.+18     	; 0x2bc <__floatsisf+0x12>

000002aa <__floatsisf>:
 2aa:	97 fb       	bst	r25, 7
 2ac:	3e f4       	brtc	.+14     	; 0x2bc <__floatsisf+0x12>
 2ae:	90 95       	com	r25
 2b0:	80 95       	com	r24
 2b2:	70 95       	com	r23
 2b4:	61 95       	neg	r22
 2b6:	7f 4f       	sbci	r23, 0xFF	; 255
 2b8:	8f 4f       	sbci	r24, 0xFF	; 255
 2ba:	9f 4f       	sbci	r25, 0xFF	; 255
 2bc:	99 23       	and	r25, r25
 2be:	a9 f0       	breq	.+42     	; 0x2ea <__floatsisf+0x40>
 2c0:	f9 2f       	mov	r31, r25
 2c2:	96 e9       	ldi	r25, 0x96	; 150
 2c4:	bb 27       	eor	r27, r27
 2c6:	93 95       	inc	r25
 2c8:	f6 95       	lsr	r31
 2ca:	87 95       	ror	r24
 2cc:	77 95       	ror	r23
 2ce:	67 95       	ror	r22
 2d0:	b7 95       	ror	r27
 2d2:	f1 11       	cpse	r31, r1
 2d4:	f8 cf       	rjmp	.-16     	; 0x2c6 <__floatsisf+0x1c>
 2d6:	fa f4       	brpl	.+62     	; 0x316 <__floatsisf+0x6c>
 2d8:	bb 0f       	add	r27, r27
 2da:	11 f4       	brne	.+4      	; 0x2e0 <__floatsisf+0x36>
 2dc:	60 ff       	sbrs	r22, 0
 2de:	1b c0       	rjmp	.+54     	; 0x316 <__floatsisf+0x6c>
 2e0:	6f 5f       	subi	r22, 0xFF	; 255
 2e2:	7f 4f       	sbci	r23, 0xFF	; 255
 2e4:	8f 4f       	sbci	r24, 0xFF	; 255
 2e6:	9f 4f       	sbci	r25, 0xFF	; 255
 2e8:	16 c0       	rjmp	.+44     	; 0x316 <__floatsisf+0x6c>
 2ea:	88 23       	and	r24, r24
 2ec:	11 f0       	breq	.+4      	; 0x2f2 <__floatsisf+0x48>
 2ee:	96 e9       	ldi	r25, 0x96	; 150
 2f0:	11 c0       	rjmp	.+34     	; 0x314 <__floatsisf+0x6a>
 2f2:	77 23       	and	r23, r23
 2f4:	21 f0       	breq	.+8      	; 0x2fe <__floatsisf+0x54>
 2f6:	9e e8       	ldi	r25, 0x8E	; 142
 2f8:	87 2f       	mov	r24, r23
 2fa:	76 2f       	mov	r23, r22
 2fc:	05 c0       	rjmp	.+10     	; 0x308 <__floatsisf+0x5e>
 2fe:	66 23       	and	r22, r22
 300:	71 f0       	breq	.+28     	; 0x31e <__floatsisf+0x74>
 302:	96 e8       	ldi	r25, 0x86	; 134
 304:	86 2f       	mov	r24, r22
 306:	70 e0       	ldi	r23, 0x00	; 0
 308:	60 e0       	ldi	r22, 0x00	; 0
 30a:	2a f0       	brmi	.+10     	; 0x316 <__floatsisf+0x6c>
 30c:	9a 95       	dec	r25
 30e:	66 0f       	add	r22, r22
 310:	77 1f       	adc	r23, r23
 312:	88 1f       	adc	r24, r24
 314:	da f7       	brpl	.-10     	; 0x30c <__floatsisf+0x62>
 316:	88 0f       	add	r24, r24
 318:	96 95       	lsr	r25
 31a:	87 95       	ror	r24
 31c:	97 f9       	bld	r25, 7
 31e:	08 95       	ret

00000320 <__fp_inf>:
 320:	97 f9       	bld	r25, 7
 322:	9f 67       	ori	r25, 0x7F	; 127
 324:	80 e8       	ldi	r24, 0x80	; 128
 326:	70 e0       	ldi	r23, 0x00	; 0
 328:	60 e0       	ldi	r22, 0x00	; 0
 32a:	08 95       	ret

0000032c <__fp_nan>:
 32c:	9f ef       	ldi	r25, 0xFF	; 255
 32e:	80 ec       	ldi	r24, 0xC0	; 192
 330:	08 95       	ret

00000332 <__fp_pscA>:
 332:	00 24       	eor	r0, r0
 334:	0a 94       	dec	r0
 336:	16 16       	cp	r1, r22
 338:	17 06       	cpc	r1, r23
 33a:	18 06       	cpc	r1, r24
 33c:	09 06       	cpc	r0, r25
 33e:	08 95       	ret

00000340 <__fp_pscB>:
 340:	00 24       	eor	r0, r0
 342:	0a 94       	dec	r0
 344:	12 16       	cp	r1, r18
 346:	13 06       	cpc	r1, r19
 348:	14 06       	cpc	r1, r20
 34a:	05 06       	cpc	r0, r21
 34c:	08 95       	ret

0000034e <__fp_round>:
 34e:	09 2e       	mov	r0, r25
 350:	03 94       	inc	r0
 352:	00 0c       	add	r0, r0
 354:	11 f4       	brne	.+4      	; 0x35a <__fp_round+0xc>
 356:	88 23       	and	r24, r24
 358:	52 f0       	brmi	.+20     	; 0x36e <__fp_round+0x20>
 35a:	bb 0f       	add	r27, r27
 35c:	40 f4       	brcc	.+16     	; 0x36e <__fp_round+0x20>
 35e:	bf 2b       	or	r27, r31
 360:	11 f4       	brne	.+4      	; 0x366 <__fp_round+0x18>
 362:	60 ff       	sbrs	r22, 0
 364:	04 c0       	rjmp	.+8      	; 0x36e <__fp_round+0x20>
 366:	6f 5f       	subi	r22, 0xFF	; 255
 368:	7f 4f       	sbci	r23, 0xFF	; 255
 36a:	8f 4f       	sbci	r24, 0xFF	; 255
 36c:	9f 4f       	sbci	r25, 0xFF	; 255
 36e:	08 95       	ret

00000370 <__fp_split3>:
 370:	57 fd       	sbrc	r21, 7
 372:	90 58       	subi	r25, 0x80	; 128
 374:	44 0f       	add	r20, r20
 376:	55 1f       	adc	r21, r21
 378:	59 f0       	breq	.+22     	; 0x390 <__fp_splitA+0x10>
 37a:	5f 3f       	cpi	r21, 0xFF	; 255
 37c:	71 f0       	breq	.+28     	; 0x39a <__fp_splitA+0x1a>
 37e:	47 95       	ror	r20

00000380 <__fp_splitA>:
 380:	88 0f       	add	r24, r24
 382:	97 fb       	bst	r25, 7
 384:	99 1f       	adc	r25, r25
 386:	61 f0       	breq	.+24     	; 0x3a0 <__fp_splitA+0x20>
 388:	9f 3f       	cpi	r25, 0xFF	; 255
 38a:	79 f0       	breq	.+30     	; 0x3aa <__fp_splitA+0x2a>
 38c:	87 95       	ror	r24
 38e:	08 95       	ret
 390:	12 16       	cp	r1, r18
 392:	13 06       	cpc	r1, r19
 394:	14 06       	cpc	r1, r20
 396:	55 1f       	adc	r21, r21
 398:	f2 cf       	rjmp	.-28     	; 0x37e <__fp_split3+0xe>
 39a:	46 95       	lsr	r20
 39c:	f1 df       	rcall	.-30     	; 0x380 <__fp_splitA>
 39e:	08 c0       	rjmp	.+16     	; 0x3b0 <__fp_splitA+0x30>
 3a0:	16 16       	cp	r1, r22
 3a2:	17 06       	cpc	r1, r23
 3a4:	18 06       	cpc	r1, r24
 3a6:	99 1f       	adc	r25, r25
 3a8:	f1 cf       	rjmp	.-30     	; 0x38c <__fp_splitA+0xc>
 3aa:	86 95       	lsr	r24
 3ac:	71 05       	cpc	r23, r1
 3ae:	61 05       	cpc	r22, r1
 3b0:	08 94       	sec
 3b2:	08 95       	ret

000003b4 <__fp_zero>:
 3b4:	e8 94       	clt

000003b6 <__fp_szero>:
 3b6:	bb 27       	eor	r27, r27
 3b8:	66 27       	eor	r22, r22
 3ba:	77 27       	eor	r23, r23
 3bc:	cb 01       	movw	r24, r22
 3be:	97 f9       	bld	r25, 7
 3c0:	08 95       	ret

000003c2 <__mulsf3>:
 3c2:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__mulsf3x>
 3c6:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__fp_round>
 3ca:	0e 94 99 01 	call	0x332	; 0x332 <__fp_pscA>
 3ce:	38 f0       	brcs	.+14     	; 0x3de <__mulsf3+0x1c>
 3d0:	0e 94 a0 01 	call	0x340	; 0x340 <__fp_pscB>
 3d4:	20 f0       	brcs	.+8      	; 0x3de <__mulsf3+0x1c>
 3d6:	95 23       	and	r25, r21
 3d8:	11 f0       	breq	.+4      	; 0x3de <__mulsf3+0x1c>
 3da:	0c 94 90 01 	jmp	0x320	; 0x320 <__fp_inf>
 3de:	0c 94 96 01 	jmp	0x32c	; 0x32c <__fp_nan>
 3e2:	11 24       	eor	r1, r1
 3e4:	0c 94 db 01 	jmp	0x3b6	; 0x3b6 <__fp_szero>

000003e8 <__mulsf3x>:
 3e8:	0e 94 b8 01 	call	0x370	; 0x370 <__fp_split3>
 3ec:	70 f3       	brcs	.-36     	; 0x3ca <__mulsf3+0x8>

000003ee <__mulsf3_pse>:
 3ee:	95 9f       	mul	r25, r21
 3f0:	c1 f3       	breq	.-16     	; 0x3e2 <__mulsf3+0x20>
 3f2:	95 0f       	add	r25, r21
 3f4:	50 e0       	ldi	r21, 0x00	; 0
 3f6:	55 1f       	adc	r21, r21
 3f8:	62 9f       	mul	r22, r18
 3fa:	f0 01       	movw	r30, r0
 3fc:	72 9f       	mul	r23, r18
 3fe:	bb 27       	eor	r27, r27
 400:	f0 0d       	add	r31, r0
 402:	b1 1d       	adc	r27, r1
 404:	63 9f       	mul	r22, r19
 406:	aa 27       	eor	r26, r26
 408:	f0 0d       	add	r31, r0
 40a:	b1 1d       	adc	r27, r1
 40c:	aa 1f       	adc	r26, r26
 40e:	64 9f       	mul	r22, r20
 410:	66 27       	eor	r22, r22
 412:	b0 0d       	add	r27, r0
 414:	a1 1d       	adc	r26, r1
 416:	66 1f       	adc	r22, r22
 418:	82 9f       	mul	r24, r18
 41a:	22 27       	eor	r18, r18
 41c:	b0 0d       	add	r27, r0
 41e:	a1 1d       	adc	r26, r1
 420:	62 1f       	adc	r22, r18
 422:	73 9f       	mul	r23, r19
 424:	b0 0d       	add	r27, r0
 426:	a1 1d       	adc	r26, r1
 428:	62 1f       	adc	r22, r18
 42a:	83 9f       	mul	r24, r19
 42c:	a0 0d       	add	r26, r0
 42e:	61 1d       	adc	r22, r1
 430:	22 1f       	adc	r18, r18
 432:	74 9f       	mul	r23, r20
 434:	33 27       	eor	r19, r19
 436:	a0 0d       	add	r26, r0
 438:	61 1d       	adc	r22, r1
 43a:	23 1f       	adc	r18, r19
 43c:	84 9f       	mul	r24, r20
 43e:	60 0d       	add	r22, r0
 440:	21 1d       	adc	r18, r1
 442:	82 2f       	mov	r24, r18
 444:	76 2f       	mov	r23, r22
 446:	6a 2f       	mov	r22, r26
 448:	11 24       	eor	r1, r1
 44a:	9f 57       	subi	r25, 0x7F	; 127
 44c:	50 40       	sbci	r21, 0x00	; 0
 44e:	9a f0       	brmi	.+38     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 450:	f1 f0       	breq	.+60     	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 452:	88 23       	and	r24, r24
 454:	4a f0       	brmi	.+18     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 456:	ee 0f       	add	r30, r30
 458:	ff 1f       	adc	r31, r31
 45a:	bb 1f       	adc	r27, r27
 45c:	66 1f       	adc	r22, r22
 45e:	77 1f       	adc	r23, r23
 460:	88 1f       	adc	r24, r24
 462:	91 50       	subi	r25, 0x01	; 1
 464:	50 40       	sbci	r21, 0x00	; 0
 466:	a9 f7       	brne	.-22     	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 468:	9e 3f       	cpi	r25, 0xFE	; 254
 46a:	51 05       	cpc	r21, r1
 46c:	80 f0       	brcs	.+32     	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 46e:	0c 94 90 01 	jmp	0x320	; 0x320 <__fp_inf>
 472:	0c 94 db 01 	jmp	0x3b6	; 0x3b6 <__fp_szero>
 476:	5f 3f       	cpi	r21, 0xFF	; 255
 478:	e4 f3       	brlt	.-8      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 47a:	98 3e       	cpi	r25, 0xE8	; 232
 47c:	d4 f3       	brlt	.-12     	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 47e:	86 95       	lsr	r24
 480:	77 95       	ror	r23
 482:	67 95       	ror	r22
 484:	b7 95       	ror	r27
 486:	f7 95       	ror	r31
 488:	e7 95       	ror	r30
 48a:	9f 5f       	subi	r25, 0xFF	; 255
 48c:	c1 f7       	brne	.-16     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 48e:	fe 2b       	or	r31, r30
 490:	88 0f       	add	r24, r24
 492:	91 1d       	adc	r25, r1
 494:	96 95       	lsr	r25
 496:	87 95       	ror	r24
 498:	97 f9       	bld	r25, 7
 49a:	08 95       	ret

0000049c <__itoa_ncheck>:
 49c:	bb 27       	eor	r27, r27
 49e:	4a 30       	cpi	r20, 0x0A	; 10
 4a0:	31 f4       	brne	.+12     	; 0x4ae <__itoa_ncheck+0x12>
 4a2:	99 23       	and	r25, r25
 4a4:	22 f4       	brpl	.+8      	; 0x4ae <__itoa_ncheck+0x12>
 4a6:	bd e2       	ldi	r27, 0x2D	; 45
 4a8:	90 95       	com	r25
 4aa:	81 95       	neg	r24
 4ac:	9f 4f       	sbci	r25, 0xFF	; 255
 4ae:	0c 94 5a 02 	jmp	0x4b4	; 0x4b4 <__utoa_common>

000004b2 <__utoa_ncheck>:
 4b2:	bb 27       	eor	r27, r27

000004b4 <__utoa_common>:
 4b4:	fb 01       	movw	r30, r22
 4b6:	55 27       	eor	r21, r21
 4b8:	aa 27       	eor	r26, r26
 4ba:	88 0f       	add	r24, r24
 4bc:	99 1f       	adc	r25, r25
 4be:	aa 1f       	adc	r26, r26
 4c0:	a4 17       	cp	r26, r20
 4c2:	10 f0       	brcs	.+4      	; 0x4c8 <__utoa_common+0x14>
 4c4:	a4 1b       	sub	r26, r20
 4c6:	83 95       	inc	r24
 4c8:	50 51       	subi	r21, 0x10	; 16
 4ca:	b9 f7       	brne	.-18     	; 0x4ba <__utoa_common+0x6>
 4cc:	a0 5d       	subi	r26, 0xD0	; 208
 4ce:	aa 33       	cpi	r26, 0x3A	; 58
 4d0:	08 f0       	brcs	.+2      	; 0x4d4 <__utoa_common+0x20>
 4d2:	a9 5d       	subi	r26, 0xD9	; 217
 4d4:	a1 93       	st	Z+, r26
 4d6:	00 97       	sbiw	r24, 0x00	; 0
 4d8:	79 f7       	brne	.-34     	; 0x4b8 <__utoa_common+0x4>
 4da:	b1 11       	cpse	r27, r1
 4dc:	b1 93       	st	Z+, r27
 4de:	11 92       	st	Z+, r1
 4e0:	cb 01       	movw	r24, r22
 4e2:	0c 94 73 02 	jmp	0x4e6	; 0x4e6 <strrev>

000004e6 <strrev>:
 4e6:	dc 01       	movw	r26, r24
 4e8:	fc 01       	movw	r30, r24
 4ea:	67 2f       	mov	r22, r23
 4ec:	71 91       	ld	r23, Z+
 4ee:	77 23       	and	r23, r23
 4f0:	e1 f7       	brne	.-8      	; 0x4ea <strrev+0x4>
 4f2:	32 97       	sbiw	r30, 0x02	; 2
 4f4:	04 c0       	rjmp	.+8      	; 0x4fe <strrev+0x18>
 4f6:	7c 91       	ld	r23, X
 4f8:	6d 93       	st	X+, r22
 4fa:	70 83       	st	Z, r23
 4fc:	62 91       	ld	r22, -Z
 4fe:	ae 17       	cp	r26, r30
 500:	bf 07       	cpc	r27, r31
 502:	c8 f3       	brcs	.-14     	; 0x4f6 <strrev+0x10>
 504:	08 95       	ret

00000506 <_exit>:
 506:	f8 94       	cli

00000508 <__stop_program>:
 508:	ff cf       	rjmp	.-2      	; 0x508 <__stop_program>
